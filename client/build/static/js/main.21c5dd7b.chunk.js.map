{"version":3,"sources":["component/Alert.js","actions/types.js","actions/alert.js","actions/profile.js","reducers/profile.js","extra/img.png","component/showProfile.js","extra/setAuthTokenHeader.js","actions/auth.js","component/Navbar.js","reducers/auth.js","component/EditProfile.js","component/Desktop.js","component/Login.js","component/Register.js","component/CreateProfile.js","App.js","reducers/alert.js","reducers/index.js","index.js"],"names":["Alert","propTypes","alerts","PropTypes","array","isRequired","connect","state","alert","length","map","severity","alertType","msg","id","LOGIN_SUCCESS","LOGIN_FAIL","AUTH_ERROR","REGISTER_SUCCESS","SET_ALERT","REMOVE_ALERT","USER_LOADED","REGISTER_FAIL","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","LOGOUT","setAlert","dispatch","v4","type","payload","setTimeout","url","getCurrentProfile","a","axios","get","res","data","response","statusText","status","createProfile","formData","history","edit","console","log","config","headers","post","push","err","errors","forEach","element","initialState","profile","loading","error","ShowProfile","Grid","align","Card","border","style","width","Img","variant","src","profileImg","img","height","Body","Title","user","name","Text","profession","city","hobby","e","setAuthToken","token","defaults","common","loadUser","localStorage","MyNavbar","auth","logout","isAuthenticated","Navbar","bg","Brand","onClick","href","className","prototypes","func","object","getItem","EditProfile","useState","bio","setFormData","useEffect","onChange","target","value","Form","onSubmit","preventDefault","Group","controlId","multiple","onDone","base64","Label","Control","as","prototype","Desktop","CircularProgress","color","to","Login","login","email","password","Paper","elevation","padding","margin","Avatar","backgroundColor","noValidate","autoComplete","TextField","label","Button","protoTypes","bool","body","JSON","stringify","Register","register","password2","CreateProfile","required","App","exact","path","component","combineReducers","action","setItem","removeItem","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21c5dd7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\n\r\nconst Alerts = ({ alerts }) => {\r\n   return ( \r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map(alert => (\r\n          <Alert severity={alert.alertType} key={alert.id}>{alert.msg}</Alert>\r\n\r\n        ))\r\n        )\r\n}   \r\n\r\nAlert.propTypes = {\r\n    alerts:PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts : state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alerts);","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\n\r\n","import {v4 as uuid, v4}  from 'uuid';\r\nimport {SET_ALERT , REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n\r\n    const id = v4()\r\n\r\n    dispatch({\r\n        type:SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n    \r\n\r\n    setTimeout(() => dispatch({ type:REMOVE_ALERT ,payload:id}), 5000 );\r\n\r\n};","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR,CLEAR_PROFILE } from './types';\r\n\r\n\r\nconst url = 'https://login-register-backend-ms.herokuapp.com'\r\n\r\n//get current user profile \r\n\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${url}/api/user/profile/me`);\r\n\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({type:CLEAR_PROFILE})\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:error.response.statusText , status: error.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// create and update profile\r\n\r\nexport const createProfile = (formData,history,edit = false) => async dispatch => {\r\n    console.log(\"from action \")\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post(`${url}/api/user/profile`,formData,config);\r\n\r\n        dispatch({\r\n            type : GET_PROFILE,\r\n            payload:res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated':'Profile Created','success'));\r\n\r\n        if(!edit){\r\n            history.push('/desktop');\r\n        }\r\n\r\n    } catch (error) {\r\n        const err = error.response.data.errors;\r\n\r\n        if(err) {\r\n            err.forEach(element => {\r\n                dispatch(setAlert(element.msg ,'error'))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{ msg : error.response.statusText , status: error.response.status }\r\n        });\r\n    }\r\n} ","import { GET_PROFILE , PROFILE_ERROR, CLEAR_PROFILE  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile :null,\r\n    loading : false,\r\n    error:{} \r\n}\r\n\r\nexport default function (state = initialState,action){\r\n    const {type ,payload} = action\r\n\r\n            switch (type){\r\n                case GET_PROFILE:\r\n                    return {\r\n                        ...state,\r\n                        profile:payload,\r\n                        loading:false    \r\n                    }\r\n                case PROFILE_ERROR:\r\n                    return{\r\n                        ...state,\r\n                        error:payload,\r\n                        loading:false\r\n                    }\r\n\r\n                case CLEAR_PROFILE:\r\n                    return{\r\n                        ...state,\r\n                        profile:null,\r\n                        loading:false\r\n                    }\r\n\r\n                default :\r\n                    return state;\r\n            }\r\n}","export default __webpack_public_path__ + \"static/media/img.2d29a104.png\";","import React, { Fragment } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport img from '../extra/img.png'\r\n\r\nconst ShowProfile = ({profile}) => {\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                \r\n                 <Grid align ='center'>\r\n\r\n                     \r\n                    <Card border=\"primary\"  style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={!profile.profileImg ? img : profile.profileImg} height=\"150\"/>\r\n                        <Card.Body>\r\n                            <Card.Title>Hello {profile.user.name}</Card.Title>\r\n                            <Card.Text>\r\n                             I am { profile.profession }\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                             City:{' '}{ profile.city }\r\n                            </Card.Text>\r\n                            <Card.Text >\r\n                                Hobbies\r\n                            </Card.Text>\r\n                            {\r\n                                profile.hobby.map( (e) => \r\n                                    (<Card.Text>{e}</Card.Text>)\r\n                                )\r\n                            }\r\n\r\n                           \r\n                        </Card.Body>\r\n\r\n                                              \r\n                    </Card>\r\n                </Grid>\r\n               \r\n            \r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ShowProfile;","import axios from  'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token \r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { LOGIN_SUCCESS, LOGIN_FAIL,REGISTER_SUCCESS,SET_ALERT,REMOVE_ALERT,USER_LOADED,CLEAR_PROFILE,REGISTER_FAIL,AUTH_ERROR,LOGOUT } from './types';\r\nimport setAuthToken from '../extra/setAuthTokenHeader';\r\n\r\nconst url = 'https://login-register-backend-ms.herokuapp.com'\r\n\r\n\r\n// Load User\r\n\r\nexport const loadUser = () => async dispatch => {\r\n   \r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    \r\n    try {\r\n             const res = await axios.get(`${url}/me`);\r\n\r\n            dispatch({\r\n                type:USER_LOADED,\r\n                payload:res.data\r\n            })\r\n    } catch (error) {   \r\n        dispatch({\r\n            type:AUTH_ERROR \r\n        });\r\n    }\r\n}\r\n\r\n\r\n// Register User\r\n\r\nexport const register = ( { name, email, password } ) => async dispatch => {\r\n\r\n    const config = {\r\n        headers : {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n          const res = await axios.post(`${url}/api/user`,body,config)\r\n          \r\n          dispatch({\r\n              type:REGISTER_SUCCESS,\r\n              payload:res.data\r\n          });\r\n\r\n          dispatch(loadUser());\r\n    \r\n          \r\n    } catch (error) {\r\n        const err = error.response.data.errors;\r\n\r\n        if(err){\r\n            err.forEach( e => {\r\n                dispatch(setAlert(e.msg,'error'))\r\n            });\r\n        }\r\n\r\n        dispatch ({\r\n            type:REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Login user\r\n\r\n\r\nexport const login = ( email, password  ) => async dispatch => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify({ email, password });\r\n\r\n        try {\r\n\r\n            const res = await axios.post(`${url}/`,body,config)\r\n\r\n            dispatch ({\r\n            type: LOGIN_SUCCESS,\r\n            payload:res.data\r\n            });\r\n\r\n            dispatch(loadUser());\r\n                \r\n        } catch (error) {\r\n            const err = error.response.data.errors;\r\n            if(err)\r\n            {\r\n                err.forEach(e => {\r\n                    dispatch(setAlert(e.msg,'error'))\r\n                });\r\n            }\r\n\r\n            dispatch ({\r\n                type:LOGIN_FAIL\r\n            });\r\n            \r\n        }\r\n}\r\n\r\n\r\n// Logout / clear profile\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE});\r\n    dispatch({ type:LOGOUT });\r\n    \r\n\r\n};\r\n","import React,{Fragment} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nconst MyNavbar = ({auth: {isAuthenticated,loading},logout}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand >Login-Registration</Navbar.Brand>\r\n            \r\n        <a onClick={logout} href=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\"></i>{' '}    \r\n           <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n        </Navbar>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nMyNavbar.prototypes = {\r\n    logout:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired \r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth : state.auth\r\n  })\r\n\r\nexport default connect(mapStateToProps, {logout})(MyNavbar);","import { Switch } from 'react-router-dom';\r\nimport { REGISTER_SUCCESS ,LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED,REGISTER_FAIL,AUTH_ERROR,LOGOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    loading:true,\r\n    user:null\r\n}\r\n\r\n\r\nexport default function ( state = initialState , action){\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                \r\n            }\r\n\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                user:payload\r\n            }\r\n\r\n        case REGISTER_FAIL:\r\n        case LOGOUT: \r\n         case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}","\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyNavbar from './Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../actions/profile';\r\nimport FileBase from 'react-file-base64';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n\r\n\r\n const EditProfile = ({ profile:{profile, loading}, getCurrentProfile,history,createProfile }) => {\r\n\r\n    const [ formData, setFormData ] = useState( {\r\n        profession:'',\r\n        bio:'',\r\n        hobby:'',\r\n        city:'',\r\n        profileImg:''\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n        getCurrentProfile();\r\n\r\n        setFormData( {\r\n                profession : loading || !profile.profession ? '':profile.profession,\r\n                bio : !profile.bio ? '' : profile.bio,\r\n                hobby:!profile.hobby ? '' : profile.hobby,\r\n                city:!profile.city ? '' : profile.city,\r\n                profileImg:!profile.profileImg ? '': profile.profileImg\r\n\r\n        } )\r\n    } ,[loading,getCurrentProfile])\r\n\r\n    const {profession,bio,hobby,city,profileImg} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]:e.target.value })\r\n\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData,history,true);\r\n        console.log(formData);\r\n\r\n     }\r\n\r\n\r\n    return (\r\n       <Fragment>\r\n           <MyNavbar/>\r\n           <h1 className=\"large text-danger\">\r\n             Edit Your Profile\r\n        </h1>\r\n        \r\n        <Form onSubmit = { e => onSubmit(e) }>\r\n                <Form.Group  controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Group>\r\n                <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setFormData({ ...formData, profileImg: base64 })}/>\r\n                    \r\n\r\n\r\n                </Form.Group>\r\n                    <Form.Label>Profession* :</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"profession\" value={profession} onChange={ e => onChange(e)}  >\r\n                    <option>Select Profession</option>\r\n                    <option>Software Enginner</option>\r\n                    <option>Software Tester</option>\r\n                    <option>Team Lead</option>\r\n                    <option>Manager</option>\r\n                    <option>HR Manager</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Bio :</Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"bio\" value={bio} onChange={ e => onChange(e)}/>   \r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Hobbies Please use comma separated values (eg.HTML,CSS,JavaScript,PHP) :</Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"hobby\" value={hobby} onChange={ e => onChange(e)}/>                       \r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>City* :</Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"city\" value={city} onChange={ e => onChange(e)} />                       \r\n                </Form.Group>\r\n                <center>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                \r\n      \r\n                </center>\r\n        </Form>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.prototype = {\r\n    profile:PropTypes.object.isRequired,\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    createProfile:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(EditProfile);","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport { Route ,BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { getCurrentProfile } from '../actions/profile'\r\nimport profile from '../reducers/profile';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport ShowProfile from './showProfile'\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport MyNavbar from './Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport auth from '../reducers/auth';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditProfile from './EditProfile';\r\nconst Desktop = ({ getCurrentProfile,auth:{user,isAuthenticated},profile:{profile,loading} }) => {\r\n    \r\n        useEffect( () => {\r\n                getCurrentProfile();\r\n        },[])\r\n\r\n        \r\n    \r\n    return (\r\n            <Fragment>\r\n                    <MyNavbar/>\r\n                    {\r\n                            loading ?\r\n                            <Fragment>\r\n                                <CircularProgress color=\"secondary\" />    \r\n                            </Fragment> \r\n                            :\r\n                            <Fragment>\r\n                                    {\r\n                                            profile === null \r\n                                            ?\r\n                                            <Fragment>\r\n                                                  <h3 className=\"large text-danger\">Welcome </h3>\r\n                                                  <p> Yous have not created Profile,Please create Profile</p>\r\n                                                  <Link to=\"/create-profile\" className=\"btn btn-light\"><AccountCircleOutlinedIcon/>Create Profile</Link>\r\n                                            </Fragment>\r\n                                            :   \r\n                                            <Fragment>\r\n                                                    <h1 className=\"large text-danger\">\r\n                                                        Edit Your Profile\r\n                                                    </h1>\r\n                                                    <Link to=\"/edit-profile\" className=\"btn btn-light\"><EditOutlinedIcon/>Edit-Profile</Link>\r\n                                                    <ShowProfile profile ={profile}/>\r\n                                                    \r\n\r\n                                            </Fragment>\r\n\r\n                                    }\r\n                            </Fragment>\r\n                          \r\n                    }\r\n            </Fragment>\r\n        \r\n                \r\n    )\r\n};\r\n\r\nDesktop.prototype = {\r\n        getCurrentProfile:PropTypes.func.isRequired,\r\n        auth:PropTypes.object.isRequired,\r\n        profile:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        auth:state.auth,\r\n        profile:state.profile\r\n        \r\n})\r\n\r\nexport default  connect(mapStateToProps, {getCurrentProfile}) (Desktop);","import React, { Fragment, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Grid } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { TextField , Button } from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../actions/auth';\r\n\r\nconst  Login = ({login , isAuthenticated }) => {\r\n\r\n    const [formData, setFormData ] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const {email, password } = formData;\r\n\r\n    const onChange = (e) => {\r\n            setFormData({...formData,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n       // console.log(formData);\r\n        login(email,password);\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to='/desktop'/>;\r\n      }\r\n\r\n\r\n    const paperstyle = {padding :20 ,height:'70vh',width:'60vh',margin:'20px auto'}\r\n    const avatarstyle = {backgroundColor:'green'}\r\n\r\n    return (\r\n       <Fragment>\r\n            <Paper elevation={5} style={paperstyle}>\r\n                    <Grid align='center'>\r\n                    <Avatar style={avatarstyle}><LockOutlinedIcon/></Avatar>\r\n                        <h2>Sign In</h2>\r\n                        <br></br>\r\n                        <form noValidate autoComplete=\"off\" onSubmit = {e => onSubmit(e)}>\r\n                            <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name=\"email\" value={email}  onChange ={ e => onChange(e)}/>\r\n                            <br/><br/>\r\n                            <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\"  type=\"password\" name=\"password\" value={password} onChange= { e => onChange(e) }/>\r\n                            <br/><br/>\r\n                            <Button type = \"submit\" variant=\"outlined\" color=\"primary\" >\r\n                             Sign In\r\n                            </Button>\r\n                            <p className=\"my-1\">\r\n                            Dont't have an account? <Link to='/register'>Sign Up</Link>\r\n                            </p>\r\n\r\n                         </form>\r\n                    </Grid>\r\n            \r\n            </Paper>\r\n       </Fragment>\r\n    )\r\n} \r\n\r\nLogin.protoTypes = {\r\n    login:PropTypes.func.isRequired,\r\n    isAuthenticated:PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n \r\n})\r\n\r\nexport default  connect(mapStateToProps,{login})(Login);","import React, { Fragment,useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deprecatedPropType, Grid } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { TextField , Button } from '@material-ui/core';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {register} from '../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { setAlert } from '../actions/alert';\r\n\r\n\r\nconst  Register = ({register, isAuthenticated, setAlert}) => {\r\n    const [formData,setFormData] = useState ({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const { name,email,password,password2 } = formData;\r\n\r\n    const onChange = (e) => {\r\n        setFormData( { ...formData , [e.target.name]:e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(password !== password2){\r\n            setAlert('Password do not Match','error');\r\n        }\r\n        else{\r\n            register({name,email,password});\r\n            console.log('user Addded');\r\n        }\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to='/desktop'/>;\r\n      }\r\n    \r\n\r\n\r\n    const paperstyle = {padding :20 ,height:'70%',width:'60vh',margin:'20px auto'}\r\n    const avatarstyle = {backgroundColor:'green'}\r\n            return(\r\n                <Fragment>\r\n                         <Paper elevation={5} style={paperstyle}>\r\n                    <Grid align='center'>\r\n                    <Avatar style={avatarstyle}><LockOutlinedIcon/></Avatar>\r\n                        <h2>Sign Up</h2>\r\n                        <br></br>\r\n                        <form noValidate autoComplete=\"off\" onSubmit = { e => onSubmit(e)}>\r\n                            <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} name=\"name\"  onChange= {e => onChange(e)}/>\r\n                            <br/><br/>\r\n                            <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" value={email} name=\"email\" onChange= {e => onChange(e)}/>\r\n                            <br/><br/>\r\n                            <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\"  type=\"password\"value={password} name=\"password\" onChange= {e => onChange(e)}/>\r\n                            <br/><br/>\r\n                            <TextField id=\"outlined-basic\" label=\"Confirm Password\" variant=\"outlined\"  type=\"password\"value={password2} name=\"password2\" onChange= {e => onChange(e)}/>\r\n                            <br/><br/>\r\n                            <Button type=\"submit\" variant=\"outlined\" color=\"primary\" >\r\n                             Sign Up\r\n                            </Button>\r\n                            <p className=\"my-1\">\r\n                            Alredy Have Account? <Link to='/'>Sign In</Link>\r\n                            </p>\r\n\r\n                         </form>\r\n                    </Grid>\r\n            \r\n            </Paper>\r\n\r\n                </Fragment>\r\n            )\r\n}\r\n\r\nRegister.protoTypes = {\r\n    register:PropTypes.func.isRequired,\r\n    isAuthenticated:PropTypes.bool,\r\n    setAlert:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{register,setAlert})(Register);","\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyNavbar from './Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../actions/profile';\r\nimport Alerts from './Alert';\r\nimport FileBase from 'react-file-base64';\r\n\r\n\r\n const CreateProfile = ({ history,createProfile }) => {\r\n\r\n    const [ formData, setFormData ] = useState( {\r\n        profession:'',\r\n        bio:'',\r\n        hobby:'',\r\n        city:'',\r\n        profileImg:''\r\n\r\n    });\r\n\r\n    \r\n\r\n    const {profession,bio,hobby,city,profileImg} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]:e.target.value })\r\n\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData,history,true);\r\n     }\r\n\r\n\r\n    return (\r\n       <Fragment>\r\n           <MyNavbar/>\r\n           <h1 className=\"large text-danger\">\r\n             Create Your Profile\r\n            </h1>\r\n        \r\n        <Form onSubmit = { e => onSubmit(e) }>\r\n                <Form.Group  controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Group>\r\n                 <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setFormData({ ...formData, profileImg: base64 })}/>\r\n\r\n                </Form.Group>\r\n                    <Form.Label>Profession* :</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"profession\" value={profession} onChange={ e => onChange(e)} >\r\n                    <option>Select Profession</option>    \r\n                    <option>Software Enginner</option>\r\n                    <option>Software Tester</option>\r\n                    <option>Team Lead</option>\r\n                    <option>Manager</option>\r\n                    <option>HR Manager</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Bio : </Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"bio\" value={bio} onChange={ e => onChange(e)} />   \r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Hobbies Please use comma separated values (eg.HTML,CSS,JavaScript,PHP) : </Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"hobby\" value={hobby} onChange={ e => onChange(e)}/>                       \r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>City* : </Form.Label>\r\n                    <Form.Control  type=\"text\" name=\"city\" value={city} onChange={ e => onChange(e)} required />                       \r\n                </Form.Group>\r\n                <center>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                \r\n                </center>\r\n        </Form>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.prototype = {\r\n    createProfile:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default connect(null,{createProfile})(CreateProfile);","import React, { Fragment } from 'react';\nimport { Route ,BrowserRouter as Router, Switch } from 'react-router-dom';\nimport './App.css';\nimport Alerts from './component/Alert';\nimport Desktop from './component/Desktop';\nimport EditProfile from './component/EditProfile';\nimport Login from './component/Login';\nimport Register from './component/Register';\nimport CreateProfile from './component/CreateProfile';\nfunction App() {\n  return (\n    <Router>   \n       <Fragment>\n       <Alerts/> \n          <Route exact path='/' component={Login}/>   \n         \n      <Switch>\n          <Route exact path='/register' component={Register}/>   \n          <Route exact path='/desktop' component={Desktop} />\n          <Route exact path='/edit-profile' component={EditProfile} />\n          <Route  exact path='/create-profile' component={CreateProfile}/>\n          \n      </Switch>  \n      </Fragment>\n      \n    </Router>\n\n  );\n}\n\nexport default App;\n","import {SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState ,action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload );\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport alert from './alert';\r\n\r\n\r\nexport default combineReducers ( {\r\n    auth,\r\n    profile,\r\n    alert\r\n    \r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n\nReactDOM.render(\n  <Provider store = {store}>\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}